{% set name = "nutpie" %}
{% set version = "0.14.2" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/nutpie-{{ version }}.tar.gz
  sha256: 35ccfed3926a36b030d9b919e3f7e5b6ed9b0820f878b5a6d9a2b740c3c896c2

build:
  number: 1
  skip: true  # [py<310]
  ignore_run_exports_from:
    - libclang

requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - maturin >=1.1,<2.0                     # [build_platform != target_platform]
    - {{ compiler('c') }}
    - {{ stdlib("c") }}
    - {{ compiler('rust') }}
    - libclang
    - clang
    - cargo-bundle-licenses
  host:
    - python
    - setuptools
    - pip
    - numpy >=1.25.0
    - maturin >=1.1,<2.0
  run:
    - python
    - pyarrow-core >=12.0.0
    - pandas >=2.0
    - xarray >=2025.01.2
    - arviz >=0.20.0
  run_constrained:
    - pymc-base >=5.20.1
    - numba >=0.60

test:
  imports:
    - nutpie
  requires:
    - pip
    - pytest
    # Temporarily disable tests on intel osx py313 due to missing pytensor build
    - pymc-base >=5.21  # [arm64 or not (py==313 and osx)]
    - numba >=0.60
  commands:
    - pip check
    - pytest tests/test_pymc.py -k "not jax" -m "not flow"  # [arm64 or not (osx and py==313)]
  source_files:
    - tests

about:
  home: https://github.com/pymc-devs/nutpie
  summary: Sample Stan or PyMC models
  description: |
    nutpie implements NUTS, an advanced gradient based sampler
    for posterior distributions, with an easy to use interface.
  license: MIT
  license_family: MIT
  license_file:
    - LICENSE
    - THIRDPARTY.yml

extra:
  recipe-maintainers:
    - twiecki
    - aseyboldt
    - maresb
    - lucianopaz
    - ferrine
